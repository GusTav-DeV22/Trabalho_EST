/*
 * This source file was generated by the Gradle 'init' task
 */
package ads.poo.est;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JPanel;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class App {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Quantas dezenas você quer jogar? (6 a 20): ");
        int dezenas = scanner.nextInt();
        while (dezenas < 6 || dezenas > 20) {
            System.out.println("Valor inválido. Digite entre 6 e 20 dezenas:");
            dezenas = scanner.nextInt();
        }

        System.out.println("Quantos jogos você quer fazer com essas dezenas? ");
        int jogos = scanner.nextInt();
        while (jogos < 1) {
            System.out.println("Valor inválido. Digite pelo menos 1 jogo:");
            jogos = scanner.nextInt();
        }

        double precoJogo = calcularPreco(dezenas);
        double total = precoJogo * jogos;

        System.out.println("\n Cada jogo custa: R$ " + String.format("%.2f", precoJogo));
        System.out.println(" Total da simulação: R$ " + String.format("%.2f", total));

        System.out.print("Deseja continuar? (s/n): ");
        String confirma = scanner.next();
        if (!confirma.equalsIgnoreCase("s")) {
            System.out.println("Simulação cancelada.");
            scanner.close();
            return;
        }

        System.out.println("\nEscolha o modo de simulação:");
        System.out.println("1 - Simular até ganhar a Mega-Sena");
        System.out.println("2 - Simular quantidade fixa de sorteios");
        int modo = scanner.nextInt();
        while (modo != 1 && modo != 2) {
            System.out.println("Opção inválida. Digite 1 ou 2:");
            modo = scanner.nextInt();
        }

        List<SimuladorGanhador> simuladores = new ArrayList<>();

        for (int i = 1; i <= jogos; i++) {
            List<Integer> jogo;
            System.out.println("\nJogo #" + i + ": Deseja escolher as dezenas (digite 'c') ou surpresinha (digite 's')?");
            String opcao = scanner.next();

            if (opcao.equalsIgnoreCase("c")) {
                jogo = new ArrayList<>();
                System.out.println("Digite as " + dezenas + " dezenas (números entre 1 e 60, sem repetir):");
                while (jogo.size() < dezenas) {
                    System.out.print("Dezena #" + (jogo.size() + 1) + ": ");
                    int dezena = scanner.nextInt();
                    if (dezena < 1 || dezena > 60) {
                        System.out.println("Número inválido.");
                    } else if (jogo.contains(dezena)) {
                        System.out.println("Número repetido.");
                    } else {
                        jogo.add(dezena);
                    }
                }
                Collections.sort(jogo);
            } else if (opcao.equalsIgnoreCase("s")) {
                jogo = gerarJogoAleatorio(dezenas);
                System.out.println("Surpresinha: " + jogo);
            } else {
                System.out.println("Opção inválida, gerando surpresinha por padrão.");
                jogo = gerarJogoAleatorio(dezenas);
                System.out.println("Surpresinha: " + jogo);
            }

            SimuladorGanhador simulador = new SimuladorGanhador(jogo, precoJogo);
            simuladores.add(simulador);
            System.out.println("\n Simulando jogo #" + i + "...");
            if (modo == 1) {
                simulador.simularAteGanharMega();
            } else {
                System.out.print("Quantos sorteios deseja simular para este jogo? ");
                int qntSorteios = scanner.nextInt();
                simulador.simularQuantidadeDeSorteios(qntSorteios);
            }
        }

        System.out.print("\nDeseja exportar os resultados para um arquivo? (s/n): ");
        String exportar = scanner.next();
        if (exportar.equalsIgnoreCase("s")) {
            System.out.print("Digite o nome do arquivo (ex: resultados.txt): ");
            String nomeArquivo = scanner.next();
            for (int i = 0; i < simuladores.size(); i++) {
                SimuladorGanhador sim = simuladores.get(i);
                String nome = nomeArquivo.replace(".txt", "_jogo" + (i + 1) + ".txt");
                sim.exportarResultados(nome);
            }
        }

        scanner.close();
    }

    private static List<Integer> gerarJogoAleatorio(int quantidade) {
        List<Integer> dezenas = new ArrayList<>();
        for (int i = 1; i <= 60; i++) {
            dezenas.add(i);
        }
        Collections.shuffle(dezenas);
        List<Integer> jogo = dezenas.subList(0, quantidade);
        Collections.sort(jogo);
        return new ArrayList<>(jogo);
    }

    private static double calcularPreco(int dezenas) {
        // Valores reais conforme tabela da Caixa
        switch (dezenas) {
            case 6: return 5.00;
            case 7: return 35.00;
            case 8: return 140.00;
            case 9: return 420.00;
            case 10: return 1050.00;
            case 11: return 2310.00;
            case 12: return 4620.00;
            case 13: return 8580.00;
            case 14: return 15015.00;
            case 15: return 25025.00;
            case 16: return 40040.00;
            case 17: return 61880.00;
            case 18: return 92820.00;
            case 19: return 139230.00;
            case 20: return 200000.00;
            default: return 0.0;
        }
    }
}